from velociraptor.observations.objects import ObservationalData

import unyt
import numpy as np
import os
import sys
import h5py
from astropy.io import fits

# Exec the master cosmology file passed as first argument
with open(sys.argv[1], "r") as handle:
    exec(handle.read())

# input_filename = "../raw/apogee_astroNN-DR17.fits"
# astroNN = fits.open(input_filename)
# astroNN_dataset = astroNN[1].data
# astroNN.close()
# GalR = astroNN_dataset['galr']
# nonan = np.where(np.isnan(GalR) == False)[0]
# GalR = GalR[nonan]
# Galz = astroNN_dataset['galz'][nonan]
# Galphi = astroNN_dataset['galphi'][nonan]
# log_g = astroNN_dataset['LOGG'][nonan]
# APOGEE_ID_astroNN = astroNN_dataset['APOGEE_ID'][nonan]

input_filename = "../raw/apogee_astroNN_data.hdf5"
astroNN_dataset = h5py.File(input_filename, "r")
GalR = astroNN_dataset['GalR'][:]
Galz = astroNN_dataset['Galz'][:]
Galphi = astroNN_dataset['Galphi'][:]
APOGEE_ID_astroNN = astroNN_dataset['APOGEE_ID'][:]
APOGEE_ID_astroNN = [i.decode() for i in APOGEE_ID_astroNN]

# input_filename = "../raw/allStar-l31c.2.fits"
# apogee = fits.open(input_filename)
# apogee_dataset = apogee[1].data
# apogee.close()
# sample = (np.bitwise_and(apogee_dataset['aspcapflag'], 2**23) == 0) & (apogee_dataset['extratarg']==0)
# selection = np.where(sample)[0]
# APOGEE_ID = apogee_dataset['APOGEE_ID'][selection]

input_filename = "../raw/APOGEE_data.hdf5"
apogee_dataset = h5py.File(input_filename, "r")
APOGEE_ID = apogee_dataset['APOGEE_ID'][:]
APOGEE_ID = [i.decode() for i in APOGEE_ID]

_, indx_APOGEE_in_astroNN, indx_astroNN_in_APOGEE = np.intersect1d(APOGEE_ID, APOGEE_ID_astroNN,
                                                                   assume_unique=False, return_indices=True, )

GalR = GalR[indx_astroNN_in_APOGEE]
Galz = Galz[indx_astroNN_in_APOGEE]
Galphi = Galphi[indx_astroNN_in_APOGEE]

output_directory = "../"

if not os.path.exists(output_directory):
    os.mkdir(output_directory)

element_list = np.array(["C", "MG", "O", "N", "OH", "OHMGFE"])

for element in element_list:

    FE_H = apogee_dataset['FE_H'][:]

    output_filename = "APOGEE_data_{0}.hdf5".format(element)

    if element == "OH":
        O_FE = apogee_dataset['O_FE'][:]
        O_H = O_FE + FE_H
        O_H = O_H[indx_APOGEE_in_astroNN]
    elif element == "OHMGFE":
        MG_FE = apogee_dataset['MG_FE'][:]
        O_FE = apogee_dataset['O_FE'][:]
        O_H = O_FE + FE_H
        O_H = O_H[indx_APOGEE_in_astroNN]
    else:
        el_FE = apogee_dataset[f"{element}_FE"][:]
        el_FE = el_FE[indx_APOGEE_in_astroNN]

    FE_H = FE_H[indx_APOGEE_in_astroNN]

    # compute COLIBRE assumed abundances ( Asplund et al. 2009 )
    Fe_over_H = 7.5
    Mg_over_H = 7.6
    O_over_H = 8.69
    C_over_H = 8.43
    N_over_H = 7.83

    Mg_over_Fe_AS09 = Mg_over_H - Fe_over_H
    O_over_Fe_AS09 = O_over_H - Fe_over_H
    C_over_Fe_AS09 = C_over_H - Fe_over_H
    N_over_Fe_AS09 = N_over_H - Fe_over_H
    O_over_H_AS09 = O_over_H

    # tabulate/compute the same ratios from Grevesse, Asplund & Sauval (2007)
    Fe_over_H_GA07 = 7.45
    Mg_over_H_GA07 = 7.53
    O_over_H_GA07 = 8.66
    C_over_H_GA07 = 8.39
    N_over_H_GA07 = 7.78

    # --
    Mg_over_Fe_GA07 = Mg_over_H_GA07 - Fe_over_H_GA07
    O_over_Fe_GA07 = O_over_H_GA07 - Fe_over_H_GA07
    C_over_Fe_GA07 = C_over_H_GA07 - Fe_over_H_GA07
    N_over_Fe_GA07 = N_over_H_GA07 - Fe_over_H_GA07

    FE_H += Fe_over_H_GA07 - Fe_over_H
    if element == "O":
        el_FE += O_over_Fe_GA07 - O_over_Fe_AS09
    if element == "MG":
        el_FE += Mg_over_Fe_GA07 - Mg_over_Fe_AS09
    if element == "N":
        el_FE += N_over_Fe_GA07 - N_over_Fe_AS09
    if element == "C":
        el_FE += C_over_Fe_GA07 - C_over_Fe_AS09
    if element == "OH":
        O_H += O_over_H_GA07 - O_over_H_AS09
        O_FE += O_over_Fe_GA07 - O_over_Fe_AS09
    if element == "OHMGFE":
        O_H += O_over_H_GA07 - O_over_H_AS09
        MG_FE += Mg_over_Fe_GA07 - Mg_over_Fe_AS09

    if element == "OH":
        x = O_H
        y = O_FE
    elif element == "OHMGFE":
        x = O_H
        y = MG_FE
    else:
        x = FE_H
        y = el_FE

    x = unyt.unyt_array(x * unyt.dimensionless)
    y = unyt.unyt_array(y * unyt.dimensionless)

    # Meta-data
    description = "The APOGEE chemical abundances taken from APOGEE data access (https://www.sdss.org/dr14/irspec/spectro_data/#catalogs) "
    description += "cross-matched with AstroNN galactocentric distances (https://data.sdss.org/datamodel/files/APOGEE_ASTRONN/apogee_astronn.html). "
    description += "For more information visit ASPCAP documentation (https://www.sdss.org/dr14/irspec/aspcap/)"

    comment = "Solar abundances converted to Asplund et al. (2009)"
    citation = "Holtzman, J. A. et al. (2018); Leung, H.W. & Bovy, Jo (2019b)"
    bibcode = "2018AJ....156..125H; 2019MNRAS.483.3255L"

    contact = "Data file generated by Camila Correa (University of Amsterdam). Email: camila.correa@uva.nl,"
    contact += " website: camilacorrea.com"

    if element == "OH":
        name = "[O/Fe] as a function of [O/H]".format(element)
        ylabel = "[O/Fe]"
        xlabel = "[O/H]"
    elif element == "OHMGFE":
        name = "[Mg/Fe] as a function of [O/H]".format(element)
        ylabel = "[Mg/Fe]"
        xlabel = "[O/H]"
    else:
        name = "[{0}/Fe] as a function of [Fe/H]".format(element)
        ylabel = "[{0}/Fe]".format(element)
        xlabel = "[Fe/H]"

    # plot_as = "points"
    # redshift = 0.0
    #
    # # Write everything
    # processed = ObservationalData()
    # processed.associate_x(x, scatter=None, comoving=False, description=xlabel)
    # processed.associate_y(y, scatter=None, comoving=False, description=ylabel)
    # processed.associate_citation(citation, bibcode)
    # processed.associate_name(name)
    # processed.associate_comment(comment)
    # processed.associate_redshift(redshift)
    # processed.associate_plot_as(plot_as)
    # processed.associate_cosmology(cosmology)

    output_path = f"{output_directory}/{output_filename}"

    if os.path.exists(output_path):
        os.remove(output_path)

    # processed.write(filename=output_path)

    ## Output in file
    with h5py.File(output_path, 'w') as data_file:

        Header = data_file.create_group('Header')

        Header.attrs["Description"] = np.string_(description)
        Header.attrs["Citation"] = np.string_(citation)
        Header.attrs["Comment"] = np.string_(comment)
        Header.attrs["Bibcode"] = np.string_(bibcode)
        Header.attrs["Contact"] = np.string_(contact)
        Header.attrs["Data"] = np.string_(name)

        dataset = data_file.create_dataset("x", data=x)
        dataset.attrs["Description"] = np.string_(xlabel)
        dataset = data_file.create_dataset("y", data=y)
        dataset.attrs["Description"] = np.string_(ylabel)

        dataset = data_file.create_dataset("GalR", data=GalR)
        description = "The Galactocentric positions (R, z, phi) are used in the computation of the orbital properties are calculated assuming that "
        description += "the distance R0 to the Galactic center is 8.125 kpc (Gravity collaboration et al. 2018), the Sun is located 20.8 pc above "
        description += "the Galactic midplane (Bennett & Bovy 2019)."
        dataset.attrs["Description"] = np.string_(description)
        dataset = data_file.create_dataset("Galz", data=Galz)
        dataset = data_file.create_dataset("Galphi", data=Galphi)